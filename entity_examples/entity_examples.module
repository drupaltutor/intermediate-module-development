<?php

use Drupal\node\NodeInterface;
use Drupal\zoopal_creature\Entity\ZoopalCreature;

/**
 * Implements hook_mail().
 */
function entity_examples_mail($key, &$message, $params) {
  if ($key === 'article_published') {
    $message['subject'] = t('New Article Published: @title', ['@title' => $params['title']]);
    $message['body'][] = t('The following article was just published on the website.');
    $message['body'][] = t('Title: @title', ['@title' => $params['title']]);
    $message['body'][] = t('URL: @url', ['@url' => $params['url']]);
  }
}

/**
 * Implements hook_entity_insert().
 */
function entity_examples_entity_insert(\Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->getEntityTypeId() === 'node' && $entity->bundle() === 'article') {
    /** @var \Drupal\node\NodeInterface $entity */
    if ($entity->isPublished()) {
      entity_examples_send_article_published_email($entity);
    }
  }
}

/**
 * Implements hook_node_update().
 */
function entity_examples_node_update(\Drupal\node\NodeInterface $node) {
  if ($node->bundle() === 'article' && $node->isPublished()) {
    /** @var \Drupal\node\NodeInterface $original */
    $original = $node->original;
    if ($original === NULL || !$original->isPublished()) {
      entity_examples_send_article_published_email($node);
    }
  }
}

/**
 * Send notification about newly published article
 *
 * @param \Drupal\node\NodeInterface $node
 * @return void
 */
function entity_examples_send_article_published_email(\Drupal\node\NodeInterface $node) {
  $params = [
    'title' => $node->label(),
    'url' => $node->toUrl('canonical', ['absolute' => TRUE])->toString(),
  ];
  /** @var \Drupal\Core\Mail\MailManagerInterface $mail_manager */
  $mail_manager = \Drupal::service('plugin.manager.mail');
  $mail_manager->mail(
    'entity_examples',
    'article_published',
    'webmaster@example.com',
    \Drupal::languageManager()->getDefaultLanguage()->getId(),
    $params
  );
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function entity_examples_node_presave(\Drupal\node\NodeInterface $node) {
  if ($node->bundle() === 'article' && $node->isPublished()) {
    /** @var \Drupal\node\NodeInterface $original */
    $original = $node->original;
    if ($original === NULL || !$original->isPublished()) {
      $node->set('created', \Drupal::time()->getRequestTime());
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function entity_examples_node_delete(\Drupal\node\NodeInterface $node) {
  if ($node->hasField('field_tags') && !$node->get('field_tags')->isEmpty()) {
    $node_storage = \Drupal::entityTypeManager()->getStorage('node');
    $term_storage = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
    foreach ($node->get('field_tags') as $item) {
      $term_id = $item->target_id;
      $remaining_taggings_count = $node_storage->getQuery()
        ->accessCheck(FALSE)
        ->condition('field_tags', $term_id)
        ->condition('nid', $node->id(), '<>')
        ->count()
        ->execute();
      if ($remaining_taggings_count === 0) {
        $tag = $term_storage->load($term_id);
        if ($tag !== NULL) {
          $tag->delete();
          \Drupal::messenger()->addWarning(
            t(
              'Deleted tag @tag, because no remaining articles were tagged with it.',
              ['@tag' => $tag->label()]
            )
          );
        }
      }
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function entity_examples_zoopal_creature_insert(ZoopalCreature $creature) {
  /** @var \Drupal\node\NodeInterface $entity */
  if (!empty($creature->get('status')->value)) {
    entity_examples_create_new_creature_article($creature);
  }
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function entity_examples_zoopal_creature_update(ZoopalCreature $creature) {
  if (!empty($creature->get('status')->value)) {
    /** @var ZoopalCreature $original */
    $original = $creature->original;
    if ($original === NULL || empty($original->get('status')->value)) {
      entity_examples_create_new_creature_article($creature);
    }
  }
}

function entity_examples_create_new_creature_article(ZoopalCreature $creature) {
  $node_storage = \Drupal::entityTypeManager()->getStorage('node');

  $body_text = '<p>';
  $body_text .= 'We are happy to welcome ' . $creature->get('name')->value
    . ' to the zoo family. ';
  if (!$creature->get('habitat')->isEmpty()) {
    $habitat = $creature->get('habitat')->entity;
    $body_text .= 'You can view them in the following habitat: ' . $habitat->label();
  }
  $body_text .= '</p>';

  /** @var NodeInterface $article */
  $article = $node_storage->create([
    'type' => 'article',
    'title' => t('Introducing @name!', ['@name' => $creature->get('name')->value]),
    'body' => [
      'value' => $body_text,
      'format' => 'basic_html',
    ],
  ]);
  $article->set('status', FALSE);
  $article->save();
}
